/* tslint:disable */
/* eslint-disable */
/**
 * Bigration API
 * Bigration
 *
 * The version of the OpenAPI document: v0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface WorkflowStatisticsDataDTO
 */
export interface WorkflowStatisticsDataDTO {
    /**
     * 
     * @type {string}
     * @memberof WorkflowStatisticsDataDTO
     */
    projectId: string;
    /**
     * 
     * @type {string}
     * @memberof WorkflowStatisticsDataDTO
     */
    workflowId: string;
    /**
     * 
     * @type {string}
     * @memberof WorkflowStatisticsDataDTO
     */
    workflowName: string;
    /**
     * 
     * @type {number}
     * @memberof WorkflowStatisticsDataDTO
     */
    averageDuration: number;
    /**
     * 
     * @type {number}
     * @memberof WorkflowStatisticsDataDTO
     */
    running: number;
    /**
     * 
     * @type {number}
     * @memberof WorkflowStatisticsDataDTO
     */
    failed: number;
    /**
     * 
     * @type {number}
     * @memberof WorkflowStatisticsDataDTO
     */
    finished: number;
    /**
     * 
     * @type {number}
     * @memberof WorkflowStatisticsDataDTO
     */
    executedInstances: number;
    /**
     * 
     * @type {number}
     * @memberof WorkflowStatisticsDataDTO
     */
    executedActions: number;
}

/**
 * Check if a given object implements the WorkflowStatisticsDataDTO interface.
 */
export function instanceOfWorkflowStatisticsDataDTO(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "projectId" in value;
    isInstance = isInstance && "workflowId" in value;
    isInstance = isInstance && "workflowName" in value;
    isInstance = isInstance && "averageDuration" in value;
    isInstance = isInstance && "running" in value;
    isInstance = isInstance && "failed" in value;
    isInstance = isInstance && "finished" in value;
    isInstance = isInstance && "executedInstances" in value;
    isInstance = isInstance && "executedActions" in value;

    return isInstance;
}

export function WorkflowStatisticsDataDTOFromJSON(json: any): WorkflowStatisticsDataDTO {
    return WorkflowStatisticsDataDTOFromJSONTyped(json, false);
}

export function WorkflowStatisticsDataDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkflowStatisticsDataDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'projectId': json['projectId'],
        'workflowId': json['workflowId'],
        'workflowName': json['workflowName'],
        'averageDuration': json['averageDuration'],
        'running': json['running'],
        'failed': json['failed'],
        'finished': json['finished'],
        'executedInstances': json['executedInstances'],
        'executedActions': json['executedActions'],
    };
}

export function WorkflowStatisticsDataDTOToJSON(value?: WorkflowStatisticsDataDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'projectId': value.projectId,
        'workflowId': value.workflowId,
        'workflowName': value.workflowName,
        'averageDuration': value.averageDuration,
        'running': value.running,
        'failed': value.failed,
        'finished': value.finished,
        'executedInstances': value.executedInstances,
        'executedActions': value.executedActions,
    };
}

