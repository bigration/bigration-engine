/* tslint:disable */
/* eslint-disable */
/**
 * Bigration API
 * Bigration
 *
 * The version of the OpenAPI document: v0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { OutputParameter } from './OutputParameter';
import {
    OutputParameterFromJSON,
    OutputParameterFromJSONTyped,
    OutputParameterToJSON,
} from './OutputParameter';

/**
 * 
 * @export
 * @interface ActionOutputParamsDTO
 */
export interface ActionOutputParamsDTO {
    /**
     * 
     * @type {string}
     * @memberof ActionOutputParamsDTO
     */
    actionId: string;
    /**
     * 
     * @type {string}
     * @memberof ActionOutputParamsDTO
     */
    actionName: string;
    /**
     * 
     * @type {Array<OutputParameter>}
     * @memberof ActionOutputParamsDTO
     */
    outputParameters?: Array<OutputParameter>;
}

/**
 * Check if a given object implements the ActionOutputParamsDTO interface.
 */
export function instanceOfActionOutputParamsDTO(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "actionId" in value;
    isInstance = isInstance && "actionName" in value;

    return isInstance;
}

export function ActionOutputParamsDTOFromJSON(json: any): ActionOutputParamsDTO {
    return ActionOutputParamsDTOFromJSONTyped(json, false);
}

export function ActionOutputParamsDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): ActionOutputParamsDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'actionId': json['actionId'],
        'actionName': json['actionName'],
        'outputParameters': !exists(json, 'outputParameters') ? undefined : ((json['outputParameters'] as Array<any>).map(OutputParameterFromJSON)),
    };
}

export function ActionOutputParamsDTOToJSON(value?: ActionOutputParamsDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'actionId': value.actionId,
        'actionName': value.actionName,
        'outputParameters': value.outputParameters === undefined ? undefined : ((value.outputParameters as Array<any>).map(OutputParameterToJSON)),
    };
}

