/* tslint:disable */
/* eslint-disable */
/**
 * Bigration API
 * Bigration
 *
 * The version of the OpenAPI document: v0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AllEntitiesBaseDTO
 */
export interface AllEntitiesBaseDTO {
    /**
     * 
     * @type {string}
     * @memberof AllEntitiesBaseDTO
     */
    projectName: string;
    /**
     * 
     * @type {string}
     * @memberof AllEntitiesBaseDTO
     */
    projectId: string;
    /**
     * 
     * @type {string}
     * @memberof AllEntitiesBaseDTO
     */
    workspaceName?: string;
    /**
     * 
     * @type {string}
     * @memberof AllEntitiesBaseDTO
     */
    workspaceId: string;
    /**
     * 
     * @type {string}
     * @memberof AllEntitiesBaseDTO
     */
    workflowName: string;
    /**
     * 
     * @type {string}
     * @memberof AllEntitiesBaseDTO
     */
    workflowId: string;
}

/**
 * Check if a given object implements the AllEntitiesBaseDTO interface.
 */
export function instanceOfAllEntitiesBaseDTO(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "projectName" in value;
    isInstance = isInstance && "projectId" in value;
    isInstance = isInstance && "workspaceId" in value;
    isInstance = isInstance && "workflowName" in value;
    isInstance = isInstance && "workflowId" in value;

    return isInstance;
}

export function AllEntitiesBaseDTOFromJSON(json: any): AllEntitiesBaseDTO {
    return AllEntitiesBaseDTOFromJSONTyped(json, false);
}

export function AllEntitiesBaseDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): AllEntitiesBaseDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'projectName': json['projectName'],
        'projectId': json['projectId'],
        'workspaceName': !exists(json, 'workspaceName') ? undefined : json['workspaceName'],
        'workspaceId': json['workspaceId'],
        'workflowName': json['workflowName'],
        'workflowId': json['workflowId'],
    };
}

export function AllEntitiesBaseDTOToJSON(value?: AllEntitiesBaseDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'projectName': value.projectName,
        'projectId': value.projectId,
        'workspaceName': value.workspaceName,
        'workspaceId': value.workspaceId,
        'workflowName': value.workflowName,
        'workflowId': value.workflowId,
    };
}

