/* tslint:disable */
/* eslint-disable */
/**
 * Bigration API
 * Bigration
 *
 * The version of the OpenAPI document: v0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface EncryptedValue
 */
export interface EncryptedValue {
    /**
     * 
     * @type {string}
     * @memberof EncryptedValue
     */
    encryptedValue?: string;
    /**
     * 
     * @type {string}
     * @memberof EncryptedValue
     */
    salt?: string;
    /**
     * 
     * @type {string}
     * @memberof EncryptedValue
     */
    decryptedValue?: string;
}

/**
 * Check if a given object implements the EncryptedValue interface.
 */
export function instanceOfEncryptedValue(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function EncryptedValueFromJSON(json: any): EncryptedValue {
    return EncryptedValueFromJSONTyped(json, false);
}

export function EncryptedValueFromJSONTyped(json: any, ignoreDiscriminator: boolean): EncryptedValue {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'encryptedValue': !exists(json, 'encryptedValue') ? undefined : json['encryptedValue'],
        'salt': !exists(json, 'salt') ? undefined : json['salt'],
        'decryptedValue': !exists(json, 'decryptedValue') ? undefined : json['decryptedValue'],
    };
}

export function EncryptedValueToJSON(value?: EncryptedValue | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'encryptedValue': value.encryptedValue,
        'salt': value.salt,
        'decryptedValue': value.decryptedValue,
    };
}

