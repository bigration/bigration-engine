/* tslint:disable */
/* eslint-disable */
/**
 * Bigration API
 * Bigration
 *
 * The version of the OpenAPI document: v0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { FilterModel } from './FilterModel';
import {
    FilterModelFromJSON,
    FilterModelFromJSONTyped,
    FilterModelToJSON,
} from './FilterModel';
import type { SortModel } from './SortModel';
import {
    SortModelFromJSON,
    SortModelFromJSONTyped,
    SortModelToJSON,
} from './SortModel';

/**
 * 
 * @export
 * @interface SearchRequestDTO
 */
export interface SearchRequestDTO {
    /**
     * 
     * @type {FilterModel}
     * @memberof SearchRequestDTO
     */
    filterModel?: FilterModel;
    /**
     * 
     * @type {SortModel}
     * @memberof SearchRequestDTO
     */
    sortModel?: SortModel;
    /**
     * 
     * @type {number}
     * @memberof SearchRequestDTO
     */
    page: number;
    /**
     * 
     * @type {number}
     * @memberof SearchRequestDTO
     */
    pageSize: number;
}

/**
 * Check if a given object implements the SearchRequestDTO interface.
 */
export function instanceOfSearchRequestDTO(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "page" in value;
    isInstance = isInstance && "pageSize" in value;

    return isInstance;
}

export function SearchRequestDTOFromJSON(json: any): SearchRequestDTO {
    return SearchRequestDTOFromJSONTyped(json, false);
}

export function SearchRequestDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): SearchRequestDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'filterModel': !exists(json, 'filterModel') ? undefined : FilterModelFromJSON(json['filterModel']),
        'sortModel': !exists(json, 'sortModel') ? undefined : SortModelFromJSON(json['sortModel']),
        'page': json['page'],
        'pageSize': json['pageSize'],
    };
}

export function SearchRequestDTOToJSON(value?: SearchRequestDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'filterModel': FilterModelToJSON(value.filterModel),
        'sortModel': SortModelToJSON(value.sortModel),
        'page': value.page,
        'pageSize': value.pageSize,
    };
}

