/* tslint:disable */
/* eslint-disable */
/**
 * Bigration API
 * Bigration
 *
 * The version of the OpenAPI document: v0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface WorkspaceModel
 */
export interface WorkspaceModel {
    /**
     * 
     * @type {string}
     * @memberof WorkspaceModel
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof WorkspaceModel
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof WorkspaceModel
     */
    accountId: string;
    /**
     * 
     * @type {number}
     * @memberof WorkspaceModel
     */
    version?: number;
    /**
     * 
     * @type {Date}
     * @memberof WorkspaceModel
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof WorkspaceModel
     */
    updatedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof WorkspaceModel
     */
    userName?: string;
    /**
     * 
     * @type {string}
     * @memberof WorkspaceModel
     */
    userId?: string;
}

/**
 * Check if a given object implements the WorkspaceModel interface.
 */
export function instanceOfWorkspaceModel(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "accountId" in value;

    return isInstance;
}

export function WorkspaceModelFromJSON(json: any): WorkspaceModel {
    return WorkspaceModelFromJSONTyped(json, false);
}

export function WorkspaceModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkspaceModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'accountId': json['accountId'],
        'version': !exists(json, 'version') ? undefined : json['version'],
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'updatedAt': !exists(json, 'updatedAt') ? undefined : (new Date(json['updatedAt'])),
        'userName': !exists(json, 'userName') ? undefined : json['userName'],
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
    };
}

export function WorkspaceModelToJSON(value?: WorkspaceModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'accountId': value.accountId,
        'version': value.version,
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'updatedAt': value.updatedAt === undefined ? undefined : (value.updatedAt.toISOString()),
        'userName': value.userName,
        'userId': value.userId,
    };
}

