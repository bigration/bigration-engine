/* tslint:disable */
/* eslint-disable */
/**
 * Bigration API
 * Bigration
 *
 * The version of the OpenAPI document: v0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AddProjectWithWorkflowDTO
 */
export interface AddProjectWithWorkflowDTO {
    /**
     * 
     * @type {string}
     * @memberof AddProjectWithWorkflowDTO
     */
    projectName: string;
    /**
     * 
     * @type {string}
     * @memberof AddProjectWithWorkflowDTO
     */
    workflowName: string;
    /**
     * 
     * @type {string}
     * @memberof AddProjectWithWorkflowDTO
     */
    region: string;
    /**
     * 
     * @type {string}
     * @memberof AddProjectWithWorkflowDTO
     */
    workspaceModelId: string;
    /**
     * 
     * @type {string}
     * @memberof AddProjectWithWorkflowDTO
     */
    workflowTemplateId?: string;
    /**
     * 
     * @type {boolean}
     * @memberof AddProjectWithWorkflowDTO
     */
    privateTemplate?: boolean;
}

/**
 * Check if a given object implements the AddProjectWithWorkflowDTO interface.
 */
export function instanceOfAddProjectWithWorkflowDTO(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "projectName" in value;
    isInstance = isInstance && "workflowName" in value;
    isInstance = isInstance && "region" in value;
    isInstance = isInstance && "workspaceModelId" in value;

    return isInstance;
}

export function AddProjectWithWorkflowDTOFromJSON(json: any): AddProjectWithWorkflowDTO {
    return AddProjectWithWorkflowDTOFromJSONTyped(json, false);
}

export function AddProjectWithWorkflowDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddProjectWithWorkflowDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'projectName': json['projectName'],
        'workflowName': json['workflowName'],
        'region': json['region'],
        'workspaceModelId': json['workspaceModelId'],
        'workflowTemplateId': !exists(json, 'workflowTemplateId') ? undefined : json['workflowTemplateId'],
        'privateTemplate': !exists(json, 'privateTemplate') ? undefined : json['privateTemplate'],
    };
}

export function AddProjectWithWorkflowDTOToJSON(value?: AddProjectWithWorkflowDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'projectName': value.projectName,
        'workflowName': value.workflowName,
        'region': value.region,
        'workspaceModelId': value.workspaceModelId,
        'workflowTemplateId': value.workflowTemplateId,
        'privateTemplate': value.privateTemplate,
    };
}

