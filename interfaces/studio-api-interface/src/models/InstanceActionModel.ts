/* tslint:disable */
/* eslint-disable */
/**
 * Bigration API
 * Bigration
 *
 * The version of the OpenAPI document: v0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ActionModel } from './ActionModel';
import {
    ActionModelFromJSON,
    ActionModelFromJSONTyped,
    ActionModelToJSON,
} from './ActionModel';

/**
 * 
 * @export
 * @interface InstanceActionModel
 */
export interface InstanceActionModel {
    /**
     * 
     * @type {string}
     * @memberof InstanceActionModel
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof InstanceActionModel
     */
    instanceId: string;
    /**
     * 
     * @type {string}
     * @memberof InstanceActionModel
     */
    status: InstanceActionModelStatusEnum;
    /**
     * 
     * @type {ActionModel}
     * @memberof InstanceActionModel
     */
    action: ActionModel;
    /**
     * 
     * @type {{ [key: string]: object | undefined; }}
     * @memberof InstanceActionModel
     */
    inputValues: { [key: string]: object | undefined; };
    /**
     * 
     * @type {object}
     * @memberof InstanceActionModel
     */
    outputValues?: object;
    /**
     * 
     * @type {number}
     * @memberof InstanceActionModel
     */
    executionTime?: number;
    /**
     * 
     * @type {number}
     * @memberof InstanceActionModel
     */
    version?: number;
    /**
     * 
     * @type {Date}
     * @memberof InstanceActionModel
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof InstanceActionModel
     */
    updatedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof InstanceActionModel
     */
    userName?: string;
    /**
     * 
     * @type {string}
     * @memberof InstanceActionModel
     */
    userId?: string;
}


/**
 * @export
 */
export const InstanceActionModelStatusEnum = {
    READY: 'READY',
    RUNNING: 'RUNNING',
    ERROR: 'ERROR',
    FINISHED: 'FINISHED',
    OUT_OF_QUOTA: 'OUT_OF_QUOTA'
} as const;
export type InstanceActionModelStatusEnum = typeof InstanceActionModelStatusEnum[keyof typeof InstanceActionModelStatusEnum];


/**
 * Check if a given object implements the InstanceActionModel interface.
 */
export function instanceOfInstanceActionModel(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "instanceId" in value;
    isInstance = isInstance && "status" in value;
    isInstance = isInstance && "action" in value;
    isInstance = isInstance && "inputValues" in value;

    return isInstance;
}

export function InstanceActionModelFromJSON(json: any): InstanceActionModel {
    return InstanceActionModelFromJSONTyped(json, false);
}

export function InstanceActionModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): InstanceActionModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'instanceId': json['instanceId'],
        'status': json['status'],
        'action': ActionModelFromJSON(json['action']),
        'inputValues': json['inputValues'],
        'outputValues': !exists(json, 'outputValues') ? undefined : json['outputValues'],
        'executionTime': !exists(json, 'executionTime') ? undefined : json['executionTime'],
        'version': !exists(json, 'version') ? undefined : json['version'],
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'updatedAt': !exists(json, 'updatedAt') ? undefined : (new Date(json['updatedAt'])),
        'userName': !exists(json, 'userName') ? undefined : json['userName'],
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
    };
}

export function InstanceActionModelToJSON(value?: InstanceActionModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'instanceId': value.instanceId,
        'status': value.status,
        'action': ActionModelToJSON(value.action),
        'inputValues': value.inputValues,
        'outputValues': value.outputValues,
        'executionTime': value.executionTime,
        'version': value.version,
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'updatedAt': value.updatedAt === undefined ? undefined : (value.updatedAt.toISOString()),
        'userName': value.userName,
        'userId': value.userId,
    };
}

