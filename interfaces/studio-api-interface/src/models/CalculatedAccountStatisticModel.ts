/* tslint:disable */
/* eslint-disable */
/**
 * Bigration API
 * Bigration
 *
 * The version of the OpenAPI document: v0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CalculatedAccountStatisticModel
 */
export interface CalculatedAccountStatisticModel {
    /**
     * 
     * @type {string}
     * @memberof CalculatedAccountStatisticModel
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof CalculatedAccountStatisticModel
     */
    accountId: string;
    /**
     * 
     * @type {string}
     * @memberof CalculatedAccountStatisticModel
     */
    plan: CalculatedAccountStatisticModelPlanEnum;
    /**
     * 
     * @type {number}
     * @memberof CalculatedAccountStatisticModel
     */
    month: number;
    /**
     * 
     * @type {number}
     * @memberof CalculatedAccountStatisticModel
     */
    year: number;
    /**
     * 
     * @type {number}
     * @memberof CalculatedAccountStatisticModel
     */
    tasksExecuted: number;
    /**
     * 
     * @type {number}
     * @memberof CalculatedAccountStatisticModel
     */
    version?: number;
    /**
     * 
     * @type {Date}
     * @memberof CalculatedAccountStatisticModel
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof CalculatedAccountStatisticModel
     */
    updatedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof CalculatedAccountStatisticModel
     */
    userName?: string;
    /**
     * 
     * @type {string}
     * @memberof CalculatedAccountStatisticModel
     */
    userId?: string;
}


/**
 * @export
 */
export const CalculatedAccountStatisticModelPlanEnum = {
    FREE: 'FREE',
    BASIC: 'BASIC',
    PRO: 'PRO',
    BUSINESS: 'BUSINESS',
    ENTERPRISE: 'ENTERPRISE'
} as const;
export type CalculatedAccountStatisticModelPlanEnum = typeof CalculatedAccountStatisticModelPlanEnum[keyof typeof CalculatedAccountStatisticModelPlanEnum];


/**
 * Check if a given object implements the CalculatedAccountStatisticModel interface.
 */
export function instanceOfCalculatedAccountStatisticModel(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "accountId" in value;
    isInstance = isInstance && "plan" in value;
    isInstance = isInstance && "month" in value;
    isInstance = isInstance && "year" in value;
    isInstance = isInstance && "tasksExecuted" in value;

    return isInstance;
}

export function CalculatedAccountStatisticModelFromJSON(json: any): CalculatedAccountStatisticModel {
    return CalculatedAccountStatisticModelFromJSONTyped(json, false);
}

export function CalculatedAccountStatisticModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): CalculatedAccountStatisticModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'accountId': json['accountId'],
        'plan': json['plan'],
        'month': json['month'],
        'year': json['year'],
        'tasksExecuted': json['tasksExecuted'],
        'version': !exists(json, 'version') ? undefined : json['version'],
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'updatedAt': !exists(json, 'updatedAt') ? undefined : (new Date(json['updatedAt'])),
        'userName': !exists(json, 'userName') ? undefined : json['userName'],
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
    };
}

export function CalculatedAccountStatisticModelToJSON(value?: CalculatedAccountStatisticModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'accountId': value.accountId,
        'plan': value.plan,
        'month': value.month,
        'year': value.year,
        'tasksExecuted': value.tasksExecuted,
        'version': value.version,
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'updatedAt': value.updatedAt === undefined ? undefined : (value.updatedAt.toISOString()),
        'userName': value.userName,
        'userId': value.userId,
    };
}

