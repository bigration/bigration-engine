/* tslint:disable */
/* eslint-disable */
/**
 * Bigration API
 * Bigration
 *
 * The version of the OpenAPI document: v0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { RegexItem } from './RegexItem';
import {
    RegexItemFromJSON,
    RegexItemFromJSONTyped,
    RegexItemToJSON,
} from './RegexItem';

/**
 * 
 * @export
 * @interface RegexAction
 */
export interface RegexAction {
    /**
     * 
     * @type {string}
     * @memberof RegexAction
     */
    value?: string;
    /**
     * 
     * @type {Array<RegexItem>}
     * @memberof RegexAction
     */
    regexItems?: Array<RegexItem>;
}

/**
 * Check if a given object implements the RegexAction interface.
 */
export function instanceOfRegexAction(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function RegexActionFromJSON(json: any): RegexAction {
    return RegexActionFromJSONTyped(json, false);
}

export function RegexActionFromJSONTyped(json: any, ignoreDiscriminator: boolean): RegexAction {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'value': !exists(json, 'value') ? undefined : json['value'],
        'regexItems': !exists(json, 'regexItems') ? undefined : ((json['regexItems'] as Array<any>).map(RegexItemFromJSON)),
    };
}

export function RegexActionToJSON(value?: RegexAction | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'value': value.value,
        'regexItems': value.regexItems === undefined ? undefined : ((value.regexItems as Array<any>).map(RegexItemToJSON)),
    };
}

