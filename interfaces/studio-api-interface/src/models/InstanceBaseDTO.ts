/* tslint:disable */
/* eslint-disable */
/**
 * Bigration API
 * Bigration
 *
 * The version of the OpenAPI document: v0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface InstanceBaseDTO
 */
export interface InstanceBaseDTO {
    /**
     * 
     * @type {string}
     * @memberof InstanceBaseDTO
     */
    id: string;
    /**
     * 
     * @type {Date}
     * @memberof InstanceBaseDTO
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof InstanceBaseDTO
     */
    triggeredAt?: Date;
    /**
     * 
     * @type {number}
     * @memberof InstanceBaseDTO
     */
    executionTime?: number;
    /**
     * 
     * @type {number}
     * @memberof InstanceBaseDTO
     */
    tasksExecuted?: number;
    /**
     * 
     * @type {string}
     * @memberof InstanceBaseDTO
     */
    triggeredBy?: InstanceBaseDTOTriggeredByEnum;
    /**
     * 
     * @type {string}
     * @memberof InstanceBaseDTO
     */
    status: InstanceBaseDTOStatusEnum;
    /**
     * 
     * @type {string}
     * @memberof InstanceBaseDTO
     */
    region: string;
    /**
     * 
     * @type {string}
     * @memberof InstanceBaseDTO
     */
    workflowId: string;
    /**
     * 
     * @type {string}
     * @memberof InstanceBaseDTO
     */
    projectId: string;
    /**
     * 
     * @type {string}
     * @memberof InstanceBaseDTO
     */
    workflowName: string;
    /**
     * 
     * @type {Date}
     * @memberof InstanceBaseDTO
     */
    archiveDate?: Date;
    /**
     * 
     * @type {Date}
     * @memberof InstanceBaseDTO
     */
    archivedAt?: Date;
}


/**
 * @export
 */
export const InstanceBaseDTOTriggeredByEnum = {
    WEBHOOK: 'WEBHOOK',
    MANUAL: 'MANUAL',
    CRON_JOB: 'CRON_JOB'
} as const;
export type InstanceBaseDTOTriggeredByEnum = typeof InstanceBaseDTOTriggeredByEnum[keyof typeof InstanceBaseDTOTriggeredByEnum];

/**
 * @export
 */
export const InstanceBaseDTOStatusEnum = {
    READY: 'READY',
    RUNNING: 'RUNNING',
    ERROR: 'ERROR',
    FINISHED: 'FINISHED',
    OUT_OF_QUOTA: 'OUT_OF_QUOTA'
} as const;
export type InstanceBaseDTOStatusEnum = typeof InstanceBaseDTOStatusEnum[keyof typeof InstanceBaseDTOStatusEnum];


/**
 * Check if a given object implements the InstanceBaseDTO interface.
 */
export function instanceOfInstanceBaseDTO(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "status" in value;
    isInstance = isInstance && "region" in value;
    isInstance = isInstance && "workflowId" in value;
    isInstance = isInstance && "projectId" in value;
    isInstance = isInstance && "workflowName" in value;

    return isInstance;
}

export function InstanceBaseDTOFromJSON(json: any): InstanceBaseDTO {
    return InstanceBaseDTOFromJSONTyped(json, false);
}

export function InstanceBaseDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): InstanceBaseDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'triggeredAt': !exists(json, 'triggeredAt') ? undefined : (new Date(json['triggeredAt'])),
        'executionTime': !exists(json, 'executionTime') ? undefined : json['executionTime'],
        'tasksExecuted': !exists(json, 'tasksExecuted') ? undefined : json['tasksExecuted'],
        'triggeredBy': !exists(json, 'triggeredBy') ? undefined : json['triggeredBy'],
        'status': json['status'],
        'region': json['region'],
        'workflowId': json['workflowId'],
        'projectId': json['projectId'],
        'workflowName': json['workflowName'],
        'archiveDate': !exists(json, 'archiveDate') ? undefined : (new Date(json['archiveDate'])),
        'archivedAt': !exists(json, 'archivedAt') ? undefined : (new Date(json['archivedAt'])),
    };
}

export function InstanceBaseDTOToJSON(value?: InstanceBaseDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'triggeredAt': value.triggeredAt === undefined ? undefined : (value.triggeredAt.toISOString()),
        'executionTime': value.executionTime,
        'tasksExecuted': value.tasksExecuted,
        'triggeredBy': value.triggeredBy,
        'status': value.status,
        'region': value.region,
        'workflowId': value.workflowId,
        'projectId': value.projectId,
        'workflowName': value.workflowName,
        'archiveDate': value.archiveDate === undefined ? undefined : (value.archiveDate.toISOString().substr(0,10)),
        'archivedAt': value.archivedAt === undefined ? undefined : (value.archivedAt.toISOString()),
    };
}

