/* tslint:disable */
/* eslint-disable */
/**
 * Bigration API
 * Bigration
 *
 * The version of the OpenAPI document: v0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AccountMember
 */
export interface AccountMember {
    /**
     * 
     * @type {string}
     * @memberof AccountMember
     */
    userId?: string;
    /**
     * 
     * @type {string}
     * @memberof AccountMember
     */
    workspaceId: string;
    /**
     * 
     * @type {string}
     * @memberof AccountMember
     */
    memberStatusEnum: AccountMemberMemberStatusEnumEnum;
    /**
     * 
     * @type {string}
     * @memberof AccountMember
     */
    email: string;
    /**
     * 
     * @type {string}
     * @memberof AccountMember
     */
    inviteId: string;
    /**
     * 
     * @type {Date}
     * @memberof AccountMember
     */
    invitedAt: Date;
}


/**
 * @export
 */
export const AccountMemberMemberStatusEnumEnum = {
    INVITED: 'INVITED',
    ACCEPTED: 'ACCEPTED',
    REJECTED: 'REJECTED',
    REVOKED: 'REVOKED'
} as const;
export type AccountMemberMemberStatusEnumEnum = typeof AccountMemberMemberStatusEnumEnum[keyof typeof AccountMemberMemberStatusEnumEnum];


/**
 * Check if a given object implements the AccountMember interface.
 */
export function instanceOfAccountMember(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "workspaceId" in value;
    isInstance = isInstance && "memberStatusEnum" in value;
    isInstance = isInstance && "email" in value;
    isInstance = isInstance && "inviteId" in value;
    isInstance = isInstance && "invitedAt" in value;

    return isInstance;
}

export function AccountMemberFromJSON(json: any): AccountMember {
    return AccountMemberFromJSONTyped(json, false);
}

export function AccountMemberFromJSONTyped(json: any, ignoreDiscriminator: boolean): AccountMember {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
        'workspaceId': json['workspaceId'],
        'memberStatusEnum': json['memberStatusEnum'],
        'email': json['email'],
        'inviteId': json['inviteId'],
        'invitedAt': (new Date(json['invitedAt'])),
    };
}

export function AccountMemberToJSON(value?: AccountMember | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'userId': value.userId,
        'workspaceId': value.workspaceId,
        'memberStatusEnum': value.memberStatusEnum,
        'email': value.email,
        'inviteId': value.inviteId,
        'invitedAt': (value.invitedAt.toISOString()),
    };
}

