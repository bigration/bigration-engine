/* tslint:disable */
/* eslint-disable */
/**
 * Bigration API
 * Bigration
 *
 * The version of the OpenAPI document: v0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { NotificationModel } from './NotificationModel';
import {
    NotificationModelFromJSON,
    NotificationModelFromJSONTyped,
    NotificationModelToJSON,
} from './NotificationModel';

/**
 * 
 * @export
 * @interface PagingResponseDTONotificationModel
 */
export interface PagingResponseDTONotificationModel {
    /**
     * 
     * @type {Array<NotificationModel>}
     * @memberof PagingResponseDTONotificationModel
     */
    response: Array<NotificationModel>;
    /**
     * 
     * @type {number}
     * @memberof PagingResponseDTONotificationModel
     */
    total: number;
    /**
     * 
     * @type {boolean}
     * @memberof PagingResponseDTONotificationModel
     */
    hasNext: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PagingResponseDTONotificationModel
     */
    hasPrevious: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PagingResponseDTONotificationModel
     */
    hasContent: boolean;
}

/**
 * Check if a given object implements the PagingResponseDTONotificationModel interface.
 */
export function instanceOfPagingResponseDTONotificationModel(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "response" in value;
    isInstance = isInstance && "total" in value;
    isInstance = isInstance && "hasNext" in value;
    isInstance = isInstance && "hasPrevious" in value;
    isInstance = isInstance && "hasContent" in value;

    return isInstance;
}

export function PagingResponseDTONotificationModelFromJSON(json: any): PagingResponseDTONotificationModel {
    return PagingResponseDTONotificationModelFromJSONTyped(json, false);
}

export function PagingResponseDTONotificationModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): PagingResponseDTONotificationModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'response': ((json['response'] as Array<any>).map(NotificationModelFromJSON)),
        'total': json['total'],
        'hasNext': json['hasNext'],
        'hasPrevious': json['hasPrevious'],
        'hasContent': json['hasContent'],
    };
}

export function PagingResponseDTONotificationModelToJSON(value?: PagingResponseDTONotificationModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'response': ((value.response as Array<any>).map(NotificationModelToJSON)),
        'total': value.total,
        'hasNext': value.hasNext,
        'hasPrevious': value.hasPrevious,
        'hasContent': value.hasContent,
    };
}

