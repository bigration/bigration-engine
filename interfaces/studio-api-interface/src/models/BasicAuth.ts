/* tslint:disable */
/* eslint-disable */
/**
 * Bigration API
 * Bigration
 *
 * The version of the OpenAPI document: v0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { EncryptedValue } from './EncryptedValue';
import {
    EncryptedValueFromJSON,
    EncryptedValueFromJSONTyped,
    EncryptedValueToJSON,
} from './EncryptedValue';

/**
 * 
 * @export
 * @interface BasicAuth
 */
export interface BasicAuth {
    /**
     * 
     * @type {string}
     * @memberof BasicAuth
     */
    userName: string;
    /**
     * 
     * @type {EncryptedValue}
     * @memberof BasicAuth
     */
    password?: EncryptedValue;
}

/**
 * Check if a given object implements the BasicAuth interface.
 */
export function instanceOfBasicAuth(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "userName" in value;

    return isInstance;
}

export function BasicAuthFromJSON(json: any): BasicAuth {
    return BasicAuthFromJSONTyped(json, false);
}

export function BasicAuthFromJSONTyped(json: any, ignoreDiscriminator: boolean): BasicAuth {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'userName': json['userName'],
        'password': !exists(json, 'password') ? undefined : EncryptedValueFromJSON(json['password']),
    };
}

export function BasicAuthToJSON(value?: BasicAuth | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'userName': value.userName,
        'password': EncryptedValueToJSON(value.password),
    };
}

