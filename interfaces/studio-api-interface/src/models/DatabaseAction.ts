/* tslint:disable */
/* eslint-disable */
/**
 * Bigration API
 * Bigration
 *
 * The version of the OpenAPI document: v0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DatabaseAction
 */
export interface DatabaseAction {
    /**
     * 
     * @type {string}
     * @memberof DatabaseAction
     */
    type: DatabaseActionTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof DatabaseAction
     */
    integrationId?: string;
    /**
     * 
     * @type {string}
     * @memberof DatabaseAction
     */
    query: string;
}


/**
 * @export
 */
export const DatabaseActionTypeEnum = {
    MONGO: 'MONGO',
    ELASTICSEARCH: 'ELASTICSEARCH',
    POSTGRES: 'POSTGRES'
} as const;
export type DatabaseActionTypeEnum = typeof DatabaseActionTypeEnum[keyof typeof DatabaseActionTypeEnum];


/**
 * Check if a given object implements the DatabaseAction interface.
 */
export function instanceOfDatabaseAction(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "query" in value;

    return isInstance;
}

export function DatabaseActionFromJSON(json: any): DatabaseAction {
    return DatabaseActionFromJSONTyped(json, false);
}

export function DatabaseActionFromJSONTyped(json: any, ignoreDiscriminator: boolean): DatabaseAction {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': json['type'],
        'integrationId': !exists(json, 'integrationId') ? undefined : json['integrationId'],
        'query': json['query'],
    };
}

export function DatabaseActionToJSON(value?: DatabaseAction | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'integrationId': value.integrationId,
        'query': value.query,
    };
}

