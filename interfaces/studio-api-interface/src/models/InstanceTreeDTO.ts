/* tslint:disable */
/* eslint-disable */
/**
 * Bigration API
 * Bigration
 *
 * The version of the OpenAPI document: v0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { WorkflowEdge } from './WorkflowEdge';
import {
    WorkflowEdgeFromJSON,
    WorkflowEdgeFromJSONTyped,
    WorkflowEdgeToJSON,
} from './WorkflowEdge';
import type { WorkflowNode } from './WorkflowNode';
import {
    WorkflowNodeFromJSON,
    WorkflowNodeFromJSONTyped,
    WorkflowNodeToJSON,
} from './WorkflowNode';

/**
 * 
 * @export
 * @interface InstanceTreeDTO
 */
export interface InstanceTreeDTO {
    /**
     * 
     * @type {string}
     * @memberof InstanceTreeDTO
     */
    id: string;
    /**
     * 
     * @type {Date}
     * @memberof InstanceTreeDTO
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof InstanceTreeDTO
     */
    updatedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof InstanceTreeDTO
     */
    triggeredBy: InstanceTreeDTOTriggeredByEnum;
    /**
     * 
     * @type {string}
     * @memberof InstanceTreeDTO
     */
    userName?: string;
    /**
     * 
     * @type {string}
     * @memberof InstanceTreeDTO
     */
    status: InstanceTreeDTOStatusEnum;
    /**
     * 
     * @type {string}
     * @memberof InstanceTreeDTO
     */
    workflowName: string;
    /**
     * 
     * @type {string}
     * @memberof InstanceTreeDTO
     */
    region: string;
    /**
     * 
     * @type {{ [key: string]: object | undefined; }}
     * @memberof InstanceTreeDTO
     */
    outputValues?: { [key: string]: object | undefined; };
    /**
     * 
     * @type {Array<WorkflowNode>}
     * @memberof InstanceTreeDTO
     */
    nodes: Array<WorkflowNode>;
    /**
     * 
     * @type {Array<WorkflowEdge>}
     * @memberof InstanceTreeDTO
     */
    edges: Array<WorkflowEdge>;
    /**
     * 
     * @type {Date}
     * @memberof InstanceTreeDTO
     */
    archiveDate?: Date;
}


/**
 * @export
 */
export const InstanceTreeDTOTriggeredByEnum = {
    WEBHOOK: 'WEBHOOK',
    MANUAL: 'MANUAL',
    CRON_JOB: 'CRON_JOB'
} as const;
export type InstanceTreeDTOTriggeredByEnum = typeof InstanceTreeDTOTriggeredByEnum[keyof typeof InstanceTreeDTOTriggeredByEnum];

/**
 * @export
 */
export const InstanceTreeDTOStatusEnum = {
    READY: 'READY',
    RUNNING: 'RUNNING',
    ERROR: 'ERROR',
    FINISHED: 'FINISHED',
    OUT_OF_QUOTA: 'OUT_OF_QUOTA'
} as const;
export type InstanceTreeDTOStatusEnum = typeof InstanceTreeDTOStatusEnum[keyof typeof InstanceTreeDTOStatusEnum];


/**
 * Check if a given object implements the InstanceTreeDTO interface.
 */
export function instanceOfInstanceTreeDTO(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "triggeredBy" in value;
    isInstance = isInstance && "status" in value;
    isInstance = isInstance && "workflowName" in value;
    isInstance = isInstance && "region" in value;
    isInstance = isInstance && "nodes" in value;
    isInstance = isInstance && "edges" in value;

    return isInstance;
}

export function InstanceTreeDTOFromJSON(json: any): InstanceTreeDTO {
    return InstanceTreeDTOFromJSONTyped(json, false);
}

export function InstanceTreeDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): InstanceTreeDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'updatedAt': !exists(json, 'updatedAt') ? undefined : (new Date(json['updatedAt'])),
        'triggeredBy': json['triggeredBy'],
        'userName': !exists(json, 'userName') ? undefined : json['userName'],
        'status': json['status'],
        'workflowName': json['workflowName'],
        'region': json['region'],
        'outputValues': !exists(json, 'outputValues') ? undefined : json['outputValues'],
        'nodes': ((json['nodes'] as Array<any>).map(WorkflowNodeFromJSON)),
        'edges': ((json['edges'] as Array<any>).map(WorkflowEdgeFromJSON)),
        'archiveDate': !exists(json, 'archiveDate') ? undefined : (new Date(json['archiveDate'])),
    };
}

export function InstanceTreeDTOToJSON(value?: InstanceTreeDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'updatedAt': value.updatedAt === undefined ? undefined : (value.updatedAt.toISOString()),
        'triggeredBy': value.triggeredBy,
        'userName': value.userName,
        'status': value.status,
        'workflowName': value.workflowName,
        'region': value.region,
        'outputValues': value.outputValues,
        'nodes': ((value.nodes as Array<any>).map(WorkflowNodeToJSON)),
        'edges': ((value.edges as Array<any>).map(WorkflowEdgeToJSON)),
        'archiveDate': value.archiveDate === undefined ? undefined : (value.archiveDate.toISOString().substr(0,10)),
    };
}

