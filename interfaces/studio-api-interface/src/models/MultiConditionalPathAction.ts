/* tslint:disable */
/* eslint-disable */
/**
 * Bigration API
 * Bigration
 *
 * The version of the OpenAPI document: v0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ConditionalPathAction } from './ConditionalPathAction';
import {
    ConditionalPathActionFromJSON,
    ConditionalPathActionFromJSONTyped,
    ConditionalPathActionToJSON,
} from './ConditionalPathAction';

/**
 * 
 * @export
 * @interface MultiConditionalPathAction
 */
export interface MultiConditionalPathAction {
    /**
     * 
     * @type {{ [key: string]: ConditionalPathAction | undefined; }}
     * @memberof MultiConditionalPathAction
     */
    flowHandleConditionalPath: { [key: string]: ConditionalPathAction | undefined; };
}

/**
 * Check if a given object implements the MultiConditionalPathAction interface.
 */
export function instanceOfMultiConditionalPathAction(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "flowHandleConditionalPath" in value;

    return isInstance;
}

export function MultiConditionalPathActionFromJSON(json: any): MultiConditionalPathAction {
    return MultiConditionalPathActionFromJSONTyped(json, false);
}

export function MultiConditionalPathActionFromJSONTyped(json: any, ignoreDiscriminator: boolean): MultiConditionalPathAction {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'flowHandleConditionalPath': (mapValues(json['flowHandleConditionalPath'], ConditionalPathActionFromJSON)),
    };
}

export function MultiConditionalPathActionToJSON(value?: MultiConditionalPathAction | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'flowHandleConditionalPath': (mapValues(value.flowHandleConditionalPath, ConditionalPathActionToJSON)),
    };
}

