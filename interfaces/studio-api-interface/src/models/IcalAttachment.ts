/* tslint:disable */
/* eslint-disable */
/**
 * Bigration API
 * Bigration
 *
 * The version of the OpenAPI document: v0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface IcalAttachment
 */
export interface IcalAttachment {
    /**
     * 
     * @type {string}
     * @memberof IcalAttachment
     */
    content?: string;
    /**
     * 
     * @type {string}
     * @memberof IcalAttachment
     */
    path?: string;
    /**
     * 
     * @type {string}
     * @memberof IcalAttachment
     */
    method: IcalAttachmentMethodEnum;
    /**
     * 
     * @type {string}
     * @memberof IcalAttachment
     */
    filename?: string;
    /**
     * 
     * @type {string}
     * @memberof IcalAttachment
     */
    href?: string;
    /**
     * 
     * @type {string}
     * @memberof IcalAttachment
     */
    encoding?: string;
}


/**
 * @export
 */
export const IcalAttachmentMethodEnum = {
    PUBLISH: 'PUBLISH',
    REQUEST: 'REQUEST',
    REPLY: 'REPLY',
    CANCEL: 'CANCEL',
    ADD: 'ADD',
    REFRESH: 'REFRESH',
    COUNTER: 'COUNTER',
    DECLINECOUNTER: 'DECLINECOUNTER'
} as const;
export type IcalAttachmentMethodEnum = typeof IcalAttachmentMethodEnum[keyof typeof IcalAttachmentMethodEnum];


/**
 * Check if a given object implements the IcalAttachment interface.
 */
export function instanceOfIcalAttachment(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "method" in value;

    return isInstance;
}

export function IcalAttachmentFromJSON(json: any): IcalAttachment {
    return IcalAttachmentFromJSONTyped(json, false);
}

export function IcalAttachmentFromJSONTyped(json: any, ignoreDiscriminator: boolean): IcalAttachment {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'content': !exists(json, 'content') ? undefined : json['content'],
        'path': !exists(json, 'path') ? undefined : json['path'],
        'method': json['method'],
        'filename': !exists(json, 'filename') ? undefined : json['filename'],
        'href': !exists(json, 'href') ? undefined : json['href'],
        'encoding': !exists(json, 'encoding') ? undefined : json['encoding'],
    };
}

export function IcalAttachmentToJSON(value?: IcalAttachment | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'content': value.content,
        'path': value.path,
        'method': value.method,
        'filename': value.filename,
        'href': value.href,
        'encoding': value.encoding,
    };
}

