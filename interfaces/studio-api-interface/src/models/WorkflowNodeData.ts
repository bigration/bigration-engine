/* tslint:disable */
/* eslint-disable */
/**
 * Bigration API
 * Bigration
 *
 * The version of the OpenAPI document: v0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { WorkflowNodeActionInstanceData } from './WorkflowNodeActionInstanceData';
import {
    WorkflowNodeActionInstanceDataFromJSON,
    WorkflowNodeActionInstanceDataFromJSONTyped,
    WorkflowNodeActionInstanceDataToJSON,
} from './WorkflowNodeActionInstanceData';

/**
 * 
 * @export
 * @interface WorkflowNodeData
 */
export interface WorkflowNodeData {
    /**
     * 
     * @type {string}
     * @memberof WorkflowNodeData
     */
    label: string;
    /**
     * 
     * @type {string}
     * @memberof WorkflowNodeData
     */
    type?: string;
    /**
     * 
     * @type {WorkflowNodeActionInstanceData}
     * @memberof WorkflowNodeData
     */
    actionInstance?: WorkflowNodeActionInstanceData;
    /**
     * 
     * @type {object}
     * @memberof WorkflowNodeData
     */
    otherOutputValues?: object;
}

/**
 * Check if a given object implements the WorkflowNodeData interface.
 */
export function instanceOfWorkflowNodeData(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "label" in value;

    return isInstance;
}

export function WorkflowNodeDataFromJSON(json: any): WorkflowNodeData {
    return WorkflowNodeDataFromJSONTyped(json, false);
}

export function WorkflowNodeDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkflowNodeData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'label': json['label'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'actionInstance': !exists(json, 'actionInstance') ? undefined : WorkflowNodeActionInstanceDataFromJSON(json['actionInstance']),
        'otherOutputValues': !exists(json, 'otherOutputValues') ? undefined : json['otherOutputValues'],
    };
}

export function WorkflowNodeDataToJSON(value?: WorkflowNodeData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'label': value.label,
        'type': value.type,
        'actionInstance': WorkflowNodeActionInstanceDataToJSON(value.actionInstance),
        'otherOutputValues': value.otherOutputValues,
    };
}

