/* tslint:disable */
/* eslint-disable */
/**
 * Bigration API
 * Bigration
 *
 * The version of the OpenAPI document: v0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { FilterItem } from './FilterItem';
import {
    FilterItemFromJSON,
    FilterItemFromJSONTyped,
    FilterItemToJSON,
} from './FilterItem';

/**
 * 
 * @export
 * @interface FilterModel
 */
export interface FilterModel {
    /**
     * 
     * @type {Array<FilterItem>}
     * @memberof FilterModel
     */
    items: Array<FilterItem>;
    /**
     * 
     * @type {string}
     * @memberof FilterModel
     */
    linkOperator?: FilterModelLinkOperatorEnum;
}


/**
 * @export
 */
export const FilterModelLinkOperatorEnum = {
    AND: 'AND',
    OR: 'OR'
} as const;
export type FilterModelLinkOperatorEnum = typeof FilterModelLinkOperatorEnum[keyof typeof FilterModelLinkOperatorEnum];


/**
 * Check if a given object implements the FilterModel interface.
 */
export function instanceOfFilterModel(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "items" in value;

    return isInstance;
}

export function FilterModelFromJSON(json: any): FilterModel {
    return FilterModelFromJSONTyped(json, false);
}

export function FilterModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): FilterModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'items': ((json['items'] as Array<any>).map(FilterItemFromJSON)),
        'linkOperator': !exists(json, 'linkOperator') ? undefined : json['linkOperator'],
    };
}

export function FilterModelToJSON(value?: FilterModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'items': ((value.items as Array<any>).map(FilterItemToJSON)),
        'linkOperator': value.linkOperator,
    };
}

