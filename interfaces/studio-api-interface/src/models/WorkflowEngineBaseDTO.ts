/* tslint:disable */
/* eslint-disable */
/**
 * Bigration API
 * Bigration
 *
 * The version of the OpenAPI document: v0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { EngineConnectionStatus } from './EngineConnectionStatus';
import {
    EngineConnectionStatusFromJSON,
    EngineConnectionStatusFromJSONTyped,
    EngineConnectionStatusToJSON,
} from './EngineConnectionStatus';
import type { EngineDeploymentDTO } from './EngineDeploymentDTO';
import {
    EngineDeploymentDTOFromJSON,
    EngineDeploymentDTOFromJSONTyped,
    EngineDeploymentDTOToJSON,
} from './EngineDeploymentDTO';

/**
 * 
 * @export
 * @interface WorkflowEngineBaseDTO
 */
export interface WorkflowEngineBaseDTO {
    /**
     * 
     * @type {string}
     * @memberof WorkflowEngineBaseDTO
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof WorkflowEngineBaseDTO
     */
    status: WorkflowEngineBaseDTOStatusEnum;
    /**
     * 
     * @type {string}
     * @memberof WorkflowEngineBaseDTO
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof WorkflowEngineBaseDTO
     */
    region: string;
    /**
     * 
     * @type {string}
     * @memberof WorkflowEngineBaseDTO
     */
    isoCountry: string;
    /**
     * 
     * @type {EngineDeploymentDTO}
     * @memberof WorkflowEngineBaseDTO
     */
    deployment: EngineDeploymentDTO;
    /**
     * 
     * @type {EngineConnectionStatus}
     * @memberof WorkflowEngineBaseDTO
     */
    connectionStatus?: EngineConnectionStatus;
}


/**
 * @export
 */
export const WorkflowEngineBaseDTOStatusEnum = {
    REQUESTED: 'REQUESTED',
    ACTIVE: 'ACTIVE',
    DEACTIVATED: 'DEACTIVATED'
} as const;
export type WorkflowEngineBaseDTOStatusEnum = typeof WorkflowEngineBaseDTOStatusEnum[keyof typeof WorkflowEngineBaseDTOStatusEnum];


/**
 * Check if a given object implements the WorkflowEngineBaseDTO interface.
 */
export function instanceOfWorkflowEngineBaseDTO(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "status" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "region" in value;
    isInstance = isInstance && "isoCountry" in value;
    isInstance = isInstance && "deployment" in value;

    return isInstance;
}

export function WorkflowEngineBaseDTOFromJSON(json: any): WorkflowEngineBaseDTO {
    return WorkflowEngineBaseDTOFromJSONTyped(json, false);
}

export function WorkflowEngineBaseDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkflowEngineBaseDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'status': json['status'],
        'name': json['name'],
        'region': json['region'],
        'isoCountry': json['isoCountry'],
        'deployment': EngineDeploymentDTOFromJSON(json['deployment']),
        'connectionStatus': !exists(json, 'connectionStatus') ? undefined : EngineConnectionStatusFromJSON(json['connectionStatus']),
    };
}

export function WorkflowEngineBaseDTOToJSON(value?: WorkflowEngineBaseDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'status': value.status,
        'name': value.name,
        'region': value.region,
        'isoCountry': value.isoCountry,
        'deployment': EngineDeploymentDTOToJSON(value.deployment),
        'connectionStatus': EngineConnectionStatusToJSON(value.connectionStatus),
    };
}

