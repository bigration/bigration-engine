/* tslint:disable */
/* eslint-disable */
/**
 * Bigration API
 * Bigration
 *
 * The version of the OpenAPI document: v0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GlobalVariableToUpdate
 */
export interface GlobalVariableToUpdate {
    /**
     * 
     * @type {string}
     * @memberof GlobalVariableToUpdate
     */
    key: string;
    /**
     * 
     * @type {string}
     * @memberof GlobalVariableToUpdate
     */
    value?: string;
    /**
     * 
     * @type {string}
     * @memberof GlobalVariableToUpdate
     */
    action: GlobalVariableToUpdateActionEnum;
}


/**
 * @export
 */
export const GlobalVariableToUpdateActionEnum = {
    REPLACE: 'REPLACE',
    ADD: 'ADD'
} as const;
export type GlobalVariableToUpdateActionEnum = typeof GlobalVariableToUpdateActionEnum[keyof typeof GlobalVariableToUpdateActionEnum];


/**
 * Check if a given object implements the GlobalVariableToUpdate interface.
 */
export function instanceOfGlobalVariableToUpdate(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "key" in value;
    isInstance = isInstance && "action" in value;

    return isInstance;
}

export function GlobalVariableToUpdateFromJSON(json: any): GlobalVariableToUpdate {
    return GlobalVariableToUpdateFromJSONTyped(json, false);
}

export function GlobalVariableToUpdateFromJSONTyped(json: any, ignoreDiscriminator: boolean): GlobalVariableToUpdate {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'key': json['key'],
        'value': !exists(json, 'value') ? undefined : json['value'],
        'action': json['action'],
    };
}

export function GlobalVariableToUpdateToJSON(value?: GlobalVariableToUpdate | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'key': value.key,
        'value': value.value,
        'action': value.action,
    };
}

