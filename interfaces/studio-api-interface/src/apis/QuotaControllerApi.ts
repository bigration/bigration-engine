/* tslint:disable */
/* eslint-disable */
/**
 * Bigration API
 * Bigration
 *
 * The version of the OpenAPI document: v0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  QuotaCurrentState,
  UserQuota,
} from '../models';
import {
    QuotaCurrentStateFromJSON,
    QuotaCurrentStateToJSON,
    UserQuotaFromJSON,
    UserQuotaToJSON,
} from '../models';

/**
 * QuotaControllerApi - interface
 * 
 * @export
 * @interface QuotaControllerApiInterface
 */
export interface QuotaControllerApiInterface {
    /**
     * 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof QuotaControllerApiInterface
     */
    getAllQuotasRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<{ [key: string]: UserQuota | undefined; }>>;

    /**
     */
    getAllQuotas(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<{ [key: string]: UserQuota | undefined; }>;

    /**
     * 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof QuotaControllerApiInterface
     */
    getCurrentUserStateRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<QuotaCurrentState>>;

    /**
     */
    getCurrentUserState(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<QuotaCurrentState>;

}

/**
 * 
 */
export class QuotaControllerApi extends runtime.BaseAPI implements QuotaControllerApiInterface {

    /**
     */
    async getAllQuotasRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<{ [key: string]: UserQuota | undefined; }>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/quota/all-quotas`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => runtime.mapValues(jsonValue, UserQuotaFromJSON));
    }

    /**
     */
    async getAllQuotas(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<{ [key: string]: UserQuota | undefined; }> {
        const response = await this.getAllQuotasRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async getCurrentUserStateRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<QuotaCurrentState>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/quota/current-state`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => QuotaCurrentStateFromJSON(jsonValue));
    }

    /**
     */
    async getCurrentUserState(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<QuotaCurrentState> {
        const response = await this.getCurrentUserStateRaw(initOverrides);
        return await response.value();
    }

}
