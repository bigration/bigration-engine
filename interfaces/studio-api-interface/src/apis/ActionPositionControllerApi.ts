/* tslint:disable */
/* eslint-disable */
/**
 * Bigration API
 * Bigration
 *
 * The version of the OpenAPI document: v0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  WorkflowNode,
} from '../models';
import {
    WorkflowNodeFromJSON,
    WorkflowNodeToJSON,
} from '../models';

export interface UpdatePositionsRequest {
    workflowId: string;
    workflowNode: Array<WorkflowNode>;
}

/**
 * ActionPositionControllerApi - interface
 * 
 * @export
 * @interface ActionPositionControllerApiInterface
 */
export interface ActionPositionControllerApiInterface {
    /**
     * 
     * @param {string} workflowId 
     * @param {Array<WorkflowNode>} workflowNode 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ActionPositionControllerApiInterface
     */
    updatePositionsRaw(requestParameters: UpdatePositionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     */
    updatePositions(requestParameters: UpdatePositionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

}

/**
 * 
 */
export class ActionPositionControllerApi extends runtime.BaseAPI implements ActionPositionControllerApiInterface {

    /**
     */
    async updatePositionsRaw(requestParameters: UpdatePositionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.workflowId === null || requestParameters.workflowId === undefined) {
            throw new runtime.RequiredError('workflowId','Required parameter requestParameters.workflowId was null or undefined when calling updatePositions.');
        }

        if (requestParameters.workflowNode === null || requestParameters.workflowNode === undefined) {
            throw new runtime.RequiredError('workflowNode','Required parameter requestParameters.workflowNode was null or undefined when calling updatePositions.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/action-position/nodes/{workflowId}`.replace(`{${"workflowId"}}`, encodeURIComponent(String(requestParameters.workflowId))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.workflowNode.map(WorkflowNodeToJSON),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async updatePositions(requestParameters: UpdatePositionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.updatePositionsRaw(requestParameters, initOverrides);
    }

}
