/* tslint:disable */
/* eslint-disable */
/**
 * Bigration API
 * Bigration
 *
 * The version of the OpenAPI document: v0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';

export interface ValidateTelegramTokenRequest {
    token: string;
}

/**
 * IntegrationValidatorControllerApi - interface
 * 
 * @export
 * @interface IntegrationValidatorControllerApiInterface
 */
export interface IntegrationValidatorControllerApiInterface {
    /**
     * 
     * @param {string} token 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof IntegrationValidatorControllerApiInterface
     */
    validateTelegramTokenRaw(requestParameters: ValidateTelegramTokenRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<number>>;

    /**
     */
    validateTelegramToken(requestParameters: ValidateTelegramTokenRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<number>;

}

/**
 * 
 */
export class IntegrationValidatorControllerApi extends runtime.BaseAPI implements IntegrationValidatorControllerApiInterface {

    /**
     */
    async validateTelegramTokenRaw(requestParameters: ValidateTelegramTokenRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<number>> {
        if (requestParameters.token === null || requestParameters.token === undefined) {
            throw new runtime.RequiredError('token','Required parameter requestParameters.token was null or undefined when calling validateTelegramToken.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/utils/integration/validation/telegram/token/{token}`.replace(`{${"token"}}`, encodeURIComponent(String(requestParameters.token))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.TextApiResponse(response) as any;
    }

    /**
     */
    async validateTelegramToken(requestParameters: ValidateTelegramTokenRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<number> {
        const response = await this.validateTelegramTokenRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
