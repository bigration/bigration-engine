/* tslint:disable */
/* eslint-disable */
/**
 * Bigration API
 * Bigration
 *
 * The version of the OpenAPI document: v0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  PagingResponseDTONotificationModel,
  SearchRequestDTO,
} from '../models';
import {
    PagingResponseDTONotificationModelFromJSON,
    PagingResponseDTONotificationModelToJSON,
    SearchRequestDTOFromJSON,
    SearchRequestDTOToJSON,
} from '../models';

export interface SearchNotificationsForUserRequest {
    searchRequestDTO: SearchRequestDTO;
}

/**
 * NotificationControllerApi - interface
 * 
 * @export
 * @interface NotificationControllerApiInterface
 */
export interface NotificationControllerApiInterface {
    /**
     * 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NotificationControllerApiInterface
     */
    getCountUnreadMessagesRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<number>>;

    /**
     */
    getCountUnreadMessages(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<number>;

    /**
     * 
     * @param {SearchRequestDTO} searchRequestDTO 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NotificationControllerApiInterface
     */
    searchNotificationsForUserRaw(requestParameters: SearchNotificationsForUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PagingResponseDTONotificationModel>>;

    /**
     */
    searchNotificationsForUser(requestParameters: SearchNotificationsForUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PagingResponseDTONotificationModel>;

}

/**
 * 
 */
export class NotificationControllerApi extends runtime.BaseAPI implements NotificationControllerApiInterface {

    /**
     */
    async getCountUnreadMessagesRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<number>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/notification/count-unread`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.TextApiResponse(response) as any;
    }

    /**
     */
    async getCountUnreadMessages(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<number> {
        const response = await this.getCountUnreadMessagesRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async searchNotificationsForUserRaw(requestParameters: SearchNotificationsForUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PagingResponseDTONotificationModel>> {
        if (requestParameters.searchRequestDTO === null || requestParameters.searchRequestDTO === undefined) {
            throw new runtime.RequiredError('searchRequestDTO','Required parameter requestParameters.searchRequestDTO was null or undefined when calling searchNotificationsForUser.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/notification/search`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: SearchRequestDTOToJSON(requestParameters.searchRequestDTO),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PagingResponseDTONotificationModelFromJSON(jsonValue));
    }

    /**
     */
    async searchNotificationsForUser(requestParameters: SearchNotificationsForUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PagingResponseDTONotificationModel> {
        const response = await this.searchNotificationsForUserRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
